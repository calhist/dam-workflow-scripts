---
AWSTemplateFormatVersion: 2010-09-09

Description: CloudWatch Service

Resources: 

# Alarms

# Rules

  ScheduledRule: 
    Type: AWS::Events::Rule
    Properties: 
      Name: ScheduledRule
      Description: Scheduled Rule
      ScheduleExpression: "rate(2 minutes)"
      State: DISABLED
      Targets: 
        - Arn: !GetAtt ExampleFunction.Arn
          Id: TargetFunction

# Logs

# Lambda Functions

  ExampleFunction: 
    Type: AWS::Lambda::Function
    Properties: 
      FunctionName: !Sub ${AWS::StackName}-example
      Handler: index.lambda_handler
      Role: !GetAtt ExampleExecutionRole.Arn
      Code: 
        ZipFile: |
          import json
          print('Loading function')
          def lambda_handler(event, context):
            print('Received event: ' + json.dumps(event, indent=2))
            return 'Ready'
      Runtime: python2.7
      Timeout: 10
    Metadata:
      Cost: $0.20/1M Requests

  # PermissionForEventsToInvokeLambda: 
  #   Type: AWS::Lambda::Permission
  #   Properties: 
  #     FunctionName: !Ref LambdaFunction
  #     Action: lambda:InvokeFunction
  #     Principal: events.amazonaws.com
  #     SourceArn: !GetAtt ScheduledRule.Arn

  ExampleExecutionRole: 
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - Effect: Allow
            Principal: 
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies: 
        - PolicyName: example-execution-policy
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action: 
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*

  ExampleLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-example
      RetentionInDays: 3

# Outputs: 
